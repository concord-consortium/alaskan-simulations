@import "common/src/vars.scss";

$borderWidth: 3px;

.container {
  display: flex;
  flex-direction: column;

  &.spanish {
    width: 120px;
  }

  .closeButton {
    background: none;
    border: none;
    z-index: 100;
    position: absolute;
    width: 38px;
    height: 38px;
    padding: 0px;
    top: -10px;
    left: 62px;

    svg {
      width: 100%;
      height: 100%;
      filter: drop-shadow(2px 2px 5px $purpleAccent50);
    }

    svg :global(.close) {
      fill: $purpleAccent;
    }
    svg :global(.border) {
      fill: $purpleAccent;
    }

    &:hover {
      cursor: pointer;
       svg :global(.background) {
        transform: scale(1.25);
        transform-origin: center;
        fill: $purpleTint25;
      }
      svg :global(.border) {
        transform: scale(1.25);
        transform-origin: center;
      }
    }

    &:active {
      svg :global(.background) {
        transform: scale(1.1);
        transform-origin: center;
        fill: $purpleAccent;
      }
      svg :global(.border) {
        transform: scale(1.1);
        transform-origin: center;
      }
      svg :global(.close) {
        fill: $white;
      }
    }
  }

  .header {
    box-sizing: border-box;
    margin: 0 auto;
    padding: 5px 15px 9px;
    height: 40px;
    border-radius: 20px;
    border: solid 3px $white;
    background-color: $purpleAccent;
    font-size: 20px;
    color: white;
    font-weight: 500;
    margin-bottom: 5px;
  }
}

.materialDropzone {
  box-sizing: border-box;
  width: 90px;
  height: 90px;
  border-radius: 10px;
  background-color: $white;
  position: relative;
  transition: background-color 0.5s;
  align-self: center;

  &.isMaterialPlaced {
    background-color: $white;
    &:hover {
      background-color: $purpleTint25;
    }
    &:active {
      // Not intuitive, but it handles case when user is dragging draggable button out of droppable container.
      background-color: $white;
    }
    .border {
      opacity: 1;
    }
    &.hoverState {
      background-color: $purpleTint25;
      :global(.material-button-materialContainer){
        :global(.material-button-placed){
          :global(.material-button-materialButton) {
            background-color: $purpleTint25;
          }
        }
      }
    }
  }

  &.isMaterialOver {
    background-color: $purpleTint25;
    .border {
      opacity: 1;
    }

    .content {
      .label {
        background-color: $purpleTint25;
        transition: background-color 0.5s;
      }
    }
  }
  &.anyDraggableSelected {
    cursor: pointer;
    background-color: $purpleTint25;
    .border {
      opacity: 1;
    }
    .content {
      pointer-events: none;
    }
  }

  .border {
    transition: opacity 0.5s;
    box-sizing: border-box;
    width: 86px;
    height: 86px;
    margin-left: 2px;
    margin-top: 2px;
    border-radius: 10px;
    border: dashed 4px $purpleAccent;
    position: absolute;
    top: 0;
    left: 0;
    pointer-events: none;
  }

  .content {
    width: 100%;
    height: 100%;
    position: relative;

    .label {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      display: flex;
      align-items: center;
      text-align: center;
      padding: 10px;
      box-sizing: border-box;
      border-radius: 11px;
      font-weight: bold;
      font-size: 18px;
      color: $purpleAccent;
      opacity: 0.9999; // otherwise, it'll be rendered under background that has opacity < 1
    }
  }
}
