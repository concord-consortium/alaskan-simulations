@import "../../vars.scss";

.timeTrack {
  width: 230px;

  .mainContainer {
    display: flex;
    flex-direction: row;
    align-items: center;
    font-size: 18px;
    font-weight: 500;
    color: $bluePrimary;
  }

  .bar {
    margin-left: -7px;
    margin-right: -7px;
    margin-top: 22px;
    height: 16px;
    width: 75px;
    background-color: $purpleTint50;
    z-index: -1;
    display: flex;
    justify-content: flex-start;
    align-items: center;

    .track {
      background-color: $bluePrimary;
      height: 8px;
      width: 0%;
      // fadeOff class is applied to track when the previous radio button start to fade off. That's the moment when
      // the track should start to grow to reach the next radio button.
      &.fadeOff {
        width: 100%;
      }
    }
  }

  .markContainer {
    width: 50px;
    display: flex;
    flex-direction: column;
    align-items: center;

    .label {
      height: 21px;
      opacity: 50%;
      display: flex;
      white-space: nowrap;

      &.fadeOn, &.fadeOff, &.finished {
        opacity: 100%;
      }
    }
  }

  .mark {
    background: none;
    border: none;
    width: 50px;
    height: 50px;
    padding: 0;
    margin: 0;

    circle:global(.border) {
      stroke: #97BFD8;
    }
    circle:global(.middle) {
      fill: $white;
    }

    &.selected {
      opacity: 100%;
      circle:global(.middle) {
        fill: $bluePrimary;
      }
    }

    &.fadeOn {
      circle:global(.border) {
        stroke: $bluePrimary;
      }
      circle:global(.middle) {
        fill: $bluePrimary;
      }
    }

    &.finished {
      opacity: 100%;

      circle:global(.border) {
        stroke: $bluePrimary;
      }
      circle:global(.middle) {
        fill: $white;
      }

      &.selected {
        circle:global(.middle) {
          fill: $bluePrimary;
        }
      }

      &:not(.selected) {
        cursor: pointer;
        &:hover {
          circle:global(.border) {
            stroke: $bluePrimary50;
          }
          circle:global(.middle) {
            fill: $bluePrimary50;
          }
        }
      }
    }

    &.fadeOff {
      circle:global(.border) {
        stroke: $bluePrimary;
      }
      circle:global(.middle) {
        fill: $white;
      }
    }
  }
}
